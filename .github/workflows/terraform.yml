name: Provision-EC2

on:
  workflow_dispatch:
    inputs:
      ec2-name:
        description: EC2 name
        required: true
        type: string
      ec2-type:
        description: EC2 type
        required: true
        type: choice
        options:
        - t3.micro
        - t3.small
      ec2-count:
       description: EC2 count
       required: true
       default: '1'
       type: string
      region:
       description: region
       required: true
       type: choice
       options:
        - ap-south-1
        - us-east-1
      subnet-zone:
       description: Subnet zone
       required: true
       type: choice
       options:
        - ap-south-1a
        - ap-south-1b
      Os-type:
        description: Select Os
        required: true 
        type: choice
        options:
         - RHEL
         - amazon
         - ubuntu
      ec2-environment:
        description: Select environment
        required: true 
        type: choice
        options:
         - DEV
         - UAT
         - PROD   
jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}'
          aws-region: ap-south-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform apply
        id:   apply
        env:
          TF_VAR_ec2_instance_name:  "${{ github.event.inputs.ec2-name }}"
          TF_VAR_ec2_instance_type:  "${{ github.event.inputs.ec2-type }}"
          TF_VAR_ec2_count:  "${{ github.event.inputs.ec2-count }}"
          TF_VAR_region:  "${{ github.event.inputs.region}}"
          TF_VAR_ami_name: "${{github.event.inputs.Os-type}}"
          TF_VAR_environment: "${{github.event.inputs.ec2-environment}}"
          
        run: |
          cd tf-aws/
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve