name: Provision EC2

on:
  workflow_dispatch:
    inputs:
      ec2-name:
        description: EC2 name
        required: true
        type: string
        default: 'App Server'
        
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID : ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
      aws-region: ap-south-1
      
    steps:
    # Checkout the repository to the GitHub Actions runner
    - uses: actions/setup-node@v3
      with:
        node-version: '14'
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '14' 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
       
    - name: Terraform Apply
      id:   plan
      env:
       TF_VAR_ec2_name:  "${{ github.event.inputs.ec2-name }}"
      run: |
        cd tf-example/
        terraform init 
        terraform validate 
        terraform plan -var="ec2_instance_name = TF_VAR_ec2_name" 
      #  terraform apply -var = variables.tf -auto-approve
